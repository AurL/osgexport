#!BPY
# -*- python-indent: 4; coding: iso-8859-1; mode: python -*-
# Copyright (C) 2008 Cedric Pinson
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#
# Authors:
#  Cedric Pinson <mornifle@plopbyte.net>
#

"""
Name: 'osgexporter (.osg)'
Blender: 248
Group: 'Export'
Tip: 'Export armature/bone/action data to osg formats.'
"""

from twisted.trial import unittest, runner, reporter
from twisted.internet import reactor, defer
from twisted.python import failure
import twisted
import math

import sys
sys.path.insert(0, "@PROJECT_SOURCE_DIR@/blenderExporter/")

import Blender
import bpy
import osg
from osg.osgobject import *
from osg.osgdata import *


def close(a, b, threshold):
    for i in range(0,len(a)):
        if math.fabs(a[i] - b[i]) > threshold:
            return False
    return True

class Exporter(unittest.TestCase):
    # ------------------------------------------------------
    def setUp(self):
        osg.osgobject.initReferenceCount()

    def tearDown(self):
        pass

    def testConfig(self):
        conf = osg.osgconf.Config()
        self.assertEquals("", conf.filename)
        self.assertEquals("", conf.author)
        self.assertEquals(2, conf.indent)
        self.assertEquals(5, conf.float_precision)
        self.assertEquals(0, conf.format_num)
        self.assertEquals(25, conf.anim_fps)
        self.assertEquals(None, conf.log_file)
        self.assertEquals(True, conf.log)
        self.assertEquals("ALL", conf.selected)
        self.assertEquals(False, conf.relative_path)
        self.assertEquals("FORCE", conf.anim_bake)
        self.assertEquals(True, conf.export_anim)
        self.assertEquals("./", conf.fullpath)
        self.assertEquals([], conf.exclude_objects)


    def testFindArmature(self):
        armature = osg.osgdata.findArmatureObjectForAction(bpy.data.actions["Idle_Main.001"])
        self.assertEquals(bpy.data.objects["Rig"], armature )

    def testUpdateCallback(self):
        node = MatrixTransform()
        node.setName("test")
        cb = UpdateTransform()
        cb.setName("woot")
        node.update_callbacks.append(cb)
        result = str(node)
        text = """MatrixTransform {
  UniqueID uniqid_MatrixTransform_0
  name "test"
  cullingActive TRUE
  UpdateCallbacks {
    osgAnimation::UpdateTransform {
      UniqueID uniqid_UpdateTransform_1
      name "woot"
    }
  }
  Matrix {
    1.00000 0.00000 0.00000 0.00000
    0.00000 1.00000 0.00000 0.00000
    0.00000 0.00000 1.00000 0.00000
    0.00000 0.00000 0.00000 1.00000
  }
  num_children 0
}
"""
        self.assertEquals(text, result)

    def testLightSource(self):
        node = LightSource()
        node.setName("test")
        node.light = Light()
        result = str(node)
        text = """LightSource {
  UniqueID uniqid_LightSource_0
  name "test"
  cullingActive FALSE
  Light {
    light_num 0
    ambient 0.05000 0.05000 0.05000 1.00000
    diffuse 0.80000 0.80000 0.80000 1.00000
    specular 1.00000 1.00000 1.00000 1.00000
    position 0.00000 0.00000 1.00000 0.00000
    direction 0.00000 0.00000 -1.00000
    constant_attenuation 1.00000
    linear_attenuation 0.00000
    quadratic_attenuation 0.00000
    spot_exponent 0.00000
    spot_cutoff 180.00000
  }
  num_children 0
}
"""
        self.assertEquals(text, result)

    def testBone(self):
        node = Bone()
        node.setName("test")
        cb = UpdateBone()
        cb.setName("overwoot")
        node.update_callbacks.append(cb)
        result = str(node)
        text = """osgAnimation::Bone {
  UniqueID uniqid_Bone_0
  DataVariance DYNAMIC
  name "test"
  cullingActive TRUE
  UpdateCallbacks {
    osgAnimation::UpdateBone {
      UniqueID uniqid_UpdateBone_1
      name "overwoot"
    }
  }
  bindQuaternion 0.00000 0.00000 0.00000 1.00000
  bindPosition 0.00000 0.00000 0.00000
  bindScale 1.00000 1.00000 1.00000
  num_children 0
}
"""
        self.assertEquals(text, result)


    def testSkeleton(self):
        node = Skeleton("test", Matrix().resize4x4().identity())
        node.setName("test")
        cb = node.update_callbacks[0]
        cb.setName("overwoot")
        result = str(node)
        text = """osgAnimation::Skeleton {
  UniqueID uniqid_Skeleton_0
  DataVariance DYNAMIC
  name "test"
  cullingActive TRUE
  UpdateCallbacks {
    osgAnimation::UpdateSkeleton {
      UniqueID uniqid_UpdateSkeleton_1
      name "overwoot"
    }
  }
  bindQuaternion 0.00000 0.00000 0.00000 1.00000
  bindPosition 0.00000 0.00000 0.00000
  bindScale 1.00000 1.00000 1.00000
  num_children 0
}
"""
        self.assertEquals(text, result)

    def testMatrixTransform(self):
        node = MatrixTransform()
        node.setName("test")
        result = str(node)
        text = """MatrixTransform {
  UniqueID uniqid_MatrixTransform_0
  name "test"
  cullingActive TRUE
  Matrix {
    1.00000 0.00000 0.00000 0.00000
    0.00000 1.00000 0.00000 0.00000
    0.00000 0.00000 1.00000 0.00000
    0.00000 0.00000 0.00000 1.00000
  }
  num_children 0
}
"""
        self.assertEquals(text, result)

    def testRigGeometry(self):
        node = RigGeometry()
        node.setName("test")
        node.groups['test'] = VertexGroup()
        result = str(node)
        text = """osgAnimation::RigGeometry {
  UniqueID uniqid_RigGeometry_0
  DataVariance DYNAMIC
  name "test"
  num_influences 1
  osgAnimation::VertexInfluence "None" 0 {
  }
}
"""
        self.assertEquals(text, result)


    def testNormalArray(self):
        array = NormalArray()
        array.array.append((0,1,20))
        result = str(array)
        text = """NormalBinding PER_VERTEX
NormalArray 1 {
  0.00000 1.00000 20.00000
}
"""
        self.assertEquals(text, result)
                
    def testBlenderObjectToGeometry(self):
        geomquad = BlenderObjectToGeometry(object = bpy.data.objects["CubeQuads"])
        self.assertEquals(False, geomquad.hasTexture())
        self.assertEquals(True, geomquad.mesh != None)
        geom = geomquad.convert()
        #print "\n" + str(geom)

        self.assertEquals("CubeQuads", geom.name)
        self.assertEquals(True, geom.vertexes != None)
        self.assertEquals(24, len(geom.vertexes.array))
        self.assertEquals(True, geom.normals != None)
        self.assertEquals(24, len(geom.normals.array))
        self.assertEquals(1, len(geom.primitives))
        self.assertEquals("QUADS", geom.primitives[0].type)
        self.assertEquals(24, len(geom.primitives[0].indexes))


        geomtriangle = BlenderObjectToGeometry(object = bpy.data.objects["CubeTriangle"])
        geom = geomtriangle.convert()
        #print geom
        self.assertEquals(True, geom.vertexes != None)
        self.assertEquals(36, len(geom.vertexes.array))
        self.assertEquals(True, geom.normals != None)
        self.assertEquals(36, len(geom.normals.array))
        self.assertEquals(1, len(geom.primitives))
        self.assertEquals("TRIANGLES", geom.primitives[0].type)
        self.assertEquals(36, len(geom.primitives[0].indexes))


        geomtriangle = BlenderObjectToGeometry(object = bpy.data.objects["CubeTriangleSmooth"])
        geom = geomtriangle.convert()
        #print geom
        self.assertEquals(True, geom.vertexes != None)
        self.assertEquals(8, len(geom.vertexes.array))
        self.assertEquals(True, geom.normals != None)
        self.assertEquals(8, len(geom.normals.array))
        self.assertEquals(1, len(geom.primitives))
        self.assertEquals("TRIANGLES", geom.primitives[0].type)
        self.assertEquals(36, len(geom.primitives[0].indexes))


        geomtriangle = BlenderObjectToGeometry(object = bpy.data.objects["CubeTriangleTextured"])
        geom = geomtriangle.convert()
        #print geom
        self.assertEquals(True, geom.vertexes != None)
        self.assertEquals(4*6, len(geom.vertexes.array))
        self.assertEquals(True, geom.uvs != None)
        self.assertEquals(4*6, len(geom.uvs['0'].array))
        self.assertEquals(True, geom.normals != None)
        self.assertEquals(4*6, len(geom.normals.array))
        self.assertEquals(True, geom.stateset != None)
        self.assertEquals(1, len(geom.stateset.texture_attributes['0']))
        self.assertEquals("textures/bbb.png", geom.stateset.texture_attributes['0'][0].file )
        self.assertEquals(1, len(geom.primitives))
        self.assertEquals("TRIANGLES", geom.primitives[0].type)
        self.assertEquals(36, len(geom.primitives[0].indexes))

    def testBroken(self):
        sc = bpy.data.scenes["Broken"]
        bpy.data.scenes.active = sc
        exporter = Export()
        exporter.process()
        exporter.write()
        self.assertEquals("DrawElementsUShort", exporter.items['Table'].children[0].drawables[0].primitives[0].getSizeArray() )
        self.assertEquals("DrawElementsUByte", exporter.items['Table.001'].children[0].drawables[0].primitives[0].getSizeArray() )

    def testLight(self):
        sc = bpy.data.scenes["Light"]
        bpy.data.scenes.active = sc
        exporter = Export()
        exporter.process()
        exporter.write()
        self.assertEquals(4, len(exporter.items))
                

    def testGeometry(self):
        scene = bpy.data.scenes["Geometry"]
        bpy.data.scenes.active = scene
        exporter = Export()
        exporter.process()
        exporter.write()

    def testArmature(self):
        armature = bpy.data.scenes["Armature"]
        bpy.data.scenes.active = armature
        exporter = Export()
        exporter.process()
        exporter.write()

    def testArmatureSimple(self):
        initReferenceCount()
        sc = bpy.data.scenes["ArmatureSimple"]
        bpy.data.scenes.active = sc
        exporter = Export()
        exporter.config.anim_bake = "force"
        exporter.process()
        print exporter.animations.keys()
        self.assertEquals(1, len(exporter.animations))
        self.assertEquals(True, len(exporter.animations.values()[0].channels[0].keys) > 2)
        self.assertEquals(1, len(exporter.root.update_callbacks))
        text = exporter.root.update_callbacks[0].ascii()
        result = '$osgAnimation::BasicAnimationManager {\n$#UniqueID uniqid_BasicAnimationManager_28\n$#num_animations 1\n  osgAnimation::Animation {\n    UniqueID uniqid_Animation_8\n    name "Action"\n    num_channels 9\n    Channel {\n      name "quaternion"\n      target "Bone.001"\n      Keyframes "Quat" 100 {\n        key 0.00000 0.00000 0.00000 0.00000 1.00000\n        key 0.04000 0.00064 0.00000 -0.00000 1.00000\n        key 0.08000 0.00257 0.00000 -0.00000 1.00000\n        key 0.12000 0.00580 0.00000 0.00000 0.99998\n        key 0.16000 0.01035 0.00000 0.00000 0.99995\n        key 0.20000 0.01625 0.00000 -0.00000 0.99987\n        key 0.24000 0.02350 -0.00000 0.00000 0.99972\n        key 0.28000 0.03212 0.00000 -0.00000 0.99948\n        key 0.32000 0.04212 0.00000 0.00000 0.99911\n        key 0.36000 0.05353 0.00000 0.00000 0.99857\n        key 0.40000 0.06633 0.00000 0.00000 0.99780\n        key 0.44000 0.08052 -0.00000 -0.00000 0.99675\n        key 0.48000 0.09610 0.00000 -0.00000 0.99537\n        key 0.52000 0.11304 -0.00000 0.00000 0.99359\n        key 0.56000 0.13131 0.00000 0.00000 0.99134\n        key 0.60000 0.15084 -0.00000 0.00000 0.98856\n        key 0.64000 0.17157 0.00000 0.00000 0.98517\n        key 0.68000 0.19342 0.00000 -0.00000 0.98112\n        key 0.72000 0.21627 0.00000 0.00000 0.97633\n        key 0.76000 0.24000 0.00000 0.00000 0.97077\n        key 0.80000 0.26447 -0.00000 0.00000 0.96439\n        key 0.84000 0.28951 -0.00000 0.00000 0.95717\n        key 0.88000 0.31495 -0.00000 -0.00000 0.94911\n        key 0.92000 0.34061 0.00000 -0.00000 0.94021\n        key 0.96000 0.36628 -0.00000 0.00000 0.93050\n        key 1.00000 0.39179 -0.00000 -0.00000 0.92005\n        key 1.04000 0.41694 0.00000 0.00000 0.90893\n        key 1.08000 0.44155 0.00000 0.00000 0.89723\n        key 1.12000 0.46547 -0.00000 -0.00000 0.88506\n        key 1.16000 0.48855 0.00000 0.00000 0.87254\n        key 1.20000 0.51065 0.00000 -0.00000 0.85979\n        key 1.24000 0.53169 -0.00000 0.00000 0.84694\n        key 1.28000 0.55157 0.00000 0.00000 0.83413\n        key 1.32000 0.57023 0.00000 0.00000 0.82148\n        key 1.36000 0.58765 -0.00000 -0.00000 0.80912\n        key 1.40000 0.60379 0.00000 0.00000 0.79714\n        key 1.44000 0.61866 0.00000 0.00000 0.78566\n        key 1.48000 0.63225 0.00000 -0.00000 0.77476\n        key 1.52000 0.64459 0.00000 0.00000 0.76453\n        key 1.56000 0.65571 -0.00000 -0.00000 0.75501\n        key 1.60000 0.66564 0.00000 -0.00000 0.74627\n        key 1.64000 0.67441 -0.00000 0.00000 0.73836\n        key 1.68000 0.68206 -0.00000 -0.00000 0.73130\n        key 1.72000 0.68863 0.00000 -0.00000 0.72512\n        key 1.76000 0.69414 0.00000 0.00000 0.71984\n        key 1.80000 0.69865 -0.00000 0.00000 0.71546\n        key 1.84000 0.70217 0.00000 -0.00000 0.71201\n        key 1.88000 0.70473 -0.00000 0.00000 0.70947\n        key 1.92000 0.70636 -0.00000 -0.00000 0.70785\n        key 1.96000 0.70707 0.00000 0.00000 0.70714\n        key 2.00000 0.70711 -0.00000 0.00000 0.70711\n        key 2.04000 0.70711 -0.00000 0.00000 0.70711\n        key 2.08000 0.70711 -0.00000 0.00000 0.70711\n        key 2.12000 0.70711 -0.00000 0.00000 0.70711\n        key 2.16000 0.70711 -0.00000 0.00000 0.70711\n        key 2.20000 0.70711 -0.00000 0.00000 0.70711\n        key 2.24000 0.70711 -0.00000 0.00000 0.70711\n        key 2.28000 0.70711 -0.00000 0.00000 0.70711\n        key 2.32000 0.70711 -0.00000 0.00000 0.70711\n        key 2.36000 0.70711 -0.00000 0.00000 0.70711\n        key 2.40000 0.70711 -0.00000 0.00000 0.70711\n        key 2.44000 0.70711 -0.00000 0.00000 0.70711\n        key 2.48000 0.70711 -0.00000 0.00000 0.70711\n        key 2.52000 0.70711 -0.00000 0.00000 0.70711\n        key 2.56000 0.70711 -0.00000 0.00000 0.70711\n        key 2.60000 0.70711 -0.00000 0.00000 0.70711\n        key 2.64000 0.70711 -0.00000 0.00000 0.70711\n        key 2.68000 0.70711 -0.00000 0.00000 0.70711\n        key 2.72000 0.70711 -0.00000 0.00000 0.70711\n        key 2.76000 0.70711 -0.00000 0.00000 0.70711\n        key 2.80000 0.70711 -0.00000 0.00000 0.70711\n        key 2.84000 0.70711 -0.00000 0.00000 0.70711\n        key 2.88000 0.70711 -0.00000 0.00000 0.70711\n        key 2.92000 0.70711 -0.00000 0.00000 0.70711\n        key 2.96000 0.70711 -0.00000 0.00000 0.70711\n        key 3.00000 0.70711 -0.00000 0.00000 0.70711\n        key 3.04000 0.70711 -0.00000 0.00000 0.70711\n        key 3.08000 0.70711 -0.00000 0.00000 0.70711\n        key 3.12000 0.70711 -0.00000 0.00000 0.70711\n        key 3.16000 0.70711 -0.00000 0.00000 0.70711\n        key 3.20000 0.70711 -0.00000 0.00000 0.70711\n        key 3.24000 0.70711 -0.00000 0.00000 0.70711\n        key 3.28000 0.70711 -0.00000 0.00000 0.70711\n        key 3.32000 0.70711 -0.00000 0.00000 0.70711\n        key 3.36000 0.70711 -0.00000 0.00000 0.70711\n        key 3.40000 0.70711 -0.00000 0.00000 0.70711\n        key 3.44000 0.70711 -0.00000 0.00000 0.70711\n        key 3.48000 0.70711 -0.00000 0.00000 0.70711\n        key 3.52000 0.70711 -0.00000 0.00000 0.70711\n        key 3.56000 0.70711 -0.00000 0.00000 0.70711\n        key 3.60000 0.70711 -0.00000 0.00000 0.70711\n        key 3.64000 0.70711 -0.00000 0.00000 0.70711\n        key 3.68000 0.70711 -0.00000 0.00000 0.70711\n        key 3.72000 0.70711 -0.00000 0.00000 0.70711\n        key 3.76000 0.70711 -0.00000 0.00000 0.70711\n        key 3.80000 0.70711 -0.00000 0.00000 0.70711\n        key 3.84000 0.70711 -0.00000 0.00000 0.70711\n        key 3.88000 0.70711 -0.00000 0.00000 0.70711\n        key 3.92000 0.70711 -0.00000 0.00000 0.70711\n        key 3.96000 0.70711 -0.00000 0.00000 0.70711\n      }\n    }\n    Channel {\n      name "scale"\n      target "Bone.001"\n      Keyframes "Vec3" 100 {\n        key 0.00000 1.00000 1.00000 1.00000\n        key 0.04000 1.00000 1.00000 1.00000\n        key 0.08000 1.00000 1.00000 1.00000\n        key 0.12000 1.00000 1.00000 1.00000\n        key 0.16000 1.00000 1.00000 1.00000\n        key 0.20000 1.00000 1.00000 1.00000\n        key 0.24000 1.00000 1.00000 1.00000\n        key 0.28000 1.00000 1.00000 1.00000\n        key 0.32000 1.00000 1.00000 1.00000\n        key 0.36000 1.00000 1.00000 1.00000\n        key 0.40000 1.00000 1.00000 1.00000\n        key 0.44000 1.00000 1.00000 1.00000\n        key 0.48000 1.00000 1.00000 1.00000\n        key 0.52000 1.00000 1.00000 1.00000\n        key 0.56000 1.00000 1.00000 1.00000\n        key 0.60000 1.00000 1.00000 1.00000\n        key 0.64000 1.00000 1.00000 1.00000\n        key 0.68000 1.00000 1.00000 1.00000\n        key 0.72000 1.00000 1.00000 1.00000\n        key 0.76000 1.00000 1.00000 1.00000\n        key 0.80000 1.00000 1.00000 1.00000\n        key 0.84000 1.00000 1.00000 1.00000\n        key 0.88000 1.00000 1.00000 1.00000\n        key 0.92000 1.00000 1.00000 1.00000\n        key 0.96000 1.00000 1.00000 1.00000\n        key 1.00000 1.00000 1.00000 1.00000\n        key 1.04000 1.00000 1.00000 1.00000\n        key 1.08000 1.00000 1.00000 1.00000\n        key 1.12000 1.00000 1.00000 1.00000\n        key 1.16000 1.00000 1.00000 1.00000\n        key 1.20000 1.00000 1.00000 1.00000\n        key 1.24000 1.00000 1.00000 1.00000\n        key 1.28000 1.00000 1.00000 1.00000\n        key 1.32000 1.00000 1.00000 1.00000\n        key 1.36000 1.00000 1.00000 1.00000\n        key 1.40000 1.00000 1.00000 1.00000\n        key 1.44000 1.00000 1.00000 1.00000\n        key 1.48000 1.00000 1.00000 1.00000\n        key 1.52000 1.00000 1.00000 1.00000\n        key 1.56000 1.00000 1.00000 1.00000\n        key 1.60000 1.00000 1.00000 1.00000\n        key 1.64000 1.00000 1.00000 1.00000\n        key 1.68000 1.00000 1.00000 1.00000\n        key 1.72000 1.00000 1.00000 1.00000\n        key 1.76000 1.00000 1.00000 1.00000\n        key 1.80000 1.00000 1.00000 1.00000\n        key 1.84000 1.00000 1.00000 1.00000\n        key 1.88000 1.00000 1.00000 1.00000\n        key 1.92000 1.00000 1.00000 1.00000\n        key 1.96000 1.00000 1.00000 1.00000\n        key 2.00000 1.00000 1.00000 1.00000\n        key 2.04000 1.00000 1.00000 1.00000\n        key 2.08000 1.00000 1.00000 1.00000\n        key 2.12000 1.00000 1.00000 1.00000\n        key 2.16000 1.00000 1.00000 1.00000\n        key 2.20000 1.00000 1.00000 1.00000\n        key 2.24000 1.00000 1.00000 1.00000\n        key 2.28000 1.00000 1.00000 1.00000\n        key 2.32000 1.00000 1.00000 1.00000\n        key 2.36000 1.00000 1.00000 1.00000\n        key 2.40000 1.00000 1.00000 1.00000\n        key 2.44000 1.00000 1.00000 1.00000\n        key 2.48000 1.00000 1.00000 1.00000\n        key 2.52000 1.00000 1.00000 1.00000\n        key 2.56000 1.00000 1.00000 1.00000\n        key 2.60000 1.00000 1.00000 1.00000\n        key 2.64000 1.00000 1.00000 1.00000\n        key 2.68000 1.00000 1.00000 1.00000\n        key 2.72000 1.00000 1.00000 1.00000\n        key 2.76000 1.00000 1.00000 1.00000\n        key 2.80000 1.00000 1.00000 1.00000\n        key 2.84000 1.00000 1.00000 1.00000\n        key 2.88000 1.00000 1.00000 1.00000\n        key 2.92000 1.00000 1.00000 1.00000\n        key 2.96000 1.00000 1.00000 1.00000\n        key 3.00000 1.00000 1.00000 1.00000\n        key 3.04000 1.00000 1.00000 1.00000\n        key 3.08000 1.00000 1.00000 1.00000\n        key 3.12000 1.00000 1.00000 1.00000\n        key 3.16000 1.00000 1.00000 1.00000\n        key 3.20000 1.00000 1.00000 1.00000\n        key 3.24000 1.00000 1.00000 1.00000\n        key 3.28000 1.00000 1.00000 1.00000\n        key 3.32000 1.00000 1.00000 1.00000\n        key 3.36000 1.00000 1.00000 1.00000\n        key 3.40000 1.00000 1.00000 1.00000\n        key 3.44000 1.00000 1.00000 1.00000\n        key 3.48000 1.00000 1.00000 1.00000\n        key 3.52000 1.00000 1.00000 1.00000\n        key 3.56000 1.00000 1.00000 1.00000\n        key 3.60000 1.00000 1.00000 1.00000\n        key 3.64000 1.00000 1.00000 1.00000\n        key 3.68000 1.00000 1.00000 1.00000\n        key 3.72000 1.00000 1.00000 1.00000\n        key 3.76000 1.00000 1.00000 1.00000\n        key 3.80000 1.00000 1.00000 1.00000\n        key 3.84000 1.00000 1.00000 1.00000\n        key 3.88000 1.00000 1.00000 1.00000\n        key 3.92000 1.00000 1.00000 1.00000\n        key 3.96000 1.00000 1.00000 1.00000\n      }\n    }\n    Channel {\n      name "position"\n      target "Bone.001"\n      Keyframes "Vec3" 100 {\n        key 0.00000 0.00000 0.00000 0.00000\n        key 0.04000 0.00000 0.00000 0.00000\n        key 0.08000 0.00000 0.00000 0.00000\n        key 0.12000 0.00000 0.00000 0.00000\n        key 0.16000 0.00000 0.00000 0.00000\n        key 0.20000 0.00000 0.00000 0.00000\n        key 0.24000 0.00000 0.00000 0.00000\n        key 0.28000 0.00000 0.00000 0.00000\n        key 0.32000 0.00000 0.00000 0.00000\n        key 0.36000 0.00000 0.00000 0.00000\n        key 0.40000 0.00000 0.00000 0.00000\n        key 0.44000 0.00000 0.00000 0.00000\n        key 0.48000 0.00000 0.00000 0.00000\n        key 0.52000 0.00000 0.00000 0.00000\n        key 0.56000 0.00000 0.00000 0.00000\n        key 0.60000 0.00000 0.00000 0.00000\n        key 0.64000 0.00000 0.00000 0.00000\n        key 0.68000 0.00000 0.00000 0.00000\n        key 0.72000 0.00000 0.00000 0.00000\n        key 0.76000 0.00000 0.00000 0.00000\n        key 0.80000 0.00000 0.00000 0.00000\n        key 0.84000 0.00000 0.00000 0.00000\n        key 0.88000 0.00000 0.00000 0.00000\n        key 0.92000 0.00000 0.00000 0.00000\n        key 0.96000 0.00000 0.00000 0.00000\n        key 1.00000 0.00000 0.00000 0.00000\n        key 1.04000 0.00000 0.00000 0.00000\n        key 1.08000 0.00000 0.00000 0.00000\n        key 1.12000 0.00000 0.00000 0.00000\n        key 1.16000 0.00000 0.00000 0.00000\n        key 1.20000 0.00000 0.00000 0.00000\n        key 1.24000 0.00000 0.00000 0.00000\n        key 1.28000 0.00000 0.00000 0.00000\n        key 1.32000 0.00000 0.00000 0.00000\n        key 1.36000 0.00000 0.00000 0.00000\n        key 1.40000 0.00000 0.00000 0.00000\n        key 1.44000 0.00000 0.00000 0.00000\n        key 1.48000 0.00000 0.00000 0.00000\n        key 1.52000 0.00000 0.00000 0.00000\n        key 1.56000 0.00000 0.00000 0.00000\n        key 1.60000 0.00000 0.00000 0.00000\n        key 1.64000 0.00000 0.00000 0.00000\n        key 1.68000 0.00000 0.00000 0.00000\n        key 1.72000 0.00000 0.00000 0.00000\n        key 1.76000 0.00000 0.00000 0.00000\n        key 1.80000 0.00000 0.00000 0.00000\n        key 1.84000 0.00000 0.00000 0.00000\n        key 1.88000 0.00000 0.00000 0.00000\n        key 1.92000 0.00000 0.00000 0.00000\n        key 1.96000 0.00000 0.00000 0.00000\n        key 2.00000 0.00000 0.00000 0.00000\n        key 2.04000 0.00000 0.00000 0.00000\n        key 2.08000 0.00000 0.00000 0.00000\n        key 2.12000 0.00000 0.00000 0.00000\n        key 2.16000 0.00000 0.00000 0.00000\n        key 2.20000 0.00000 0.00000 0.00000\n        key 2.24000 0.00000 0.00000 0.00000\n        key 2.28000 0.00000 0.00000 0.00000\n        key 2.32000 0.00000 0.00000 0.00000\n        key 2.36000 0.00000 0.00000 0.00000\n        key 2.40000 0.00000 0.00000 0.00000\n        key 2.44000 0.00000 0.00000 0.00000\n        key 2.48000 0.00000 0.00000 0.00000\n        key 2.52000 0.00000 0.00000 0.00000\n        key 2.56000 0.00000 0.00000 0.00000\n        key 2.60000 0.00000 0.00000 0.00000\n        key 2.64000 0.00000 0.00000 0.00000\n        key 2.68000 0.00000 0.00000 0.00000\n        key 2.72000 0.00000 0.00000 0.00000\n        key 2.76000 0.00000 0.00000 0.00000\n        key 2.80000 0.00000 0.00000 0.00000\n        key 2.84000 0.00000 0.00000 0.00000\n        key 2.88000 0.00000 0.00000 0.00000\n        key 2.92000 0.00000 0.00000 0.00000\n        key 2.96000 0.00000 0.00000 0.00000\n        key 3.00000 0.00000 0.00000 0.00000\n        key 3.04000 0.00000 0.00000 0.00000\n        key 3.08000 0.00000 0.00000 0.00000\n        key 3.12000 0.00000 0.00000 0.00000\n        key 3.16000 0.00000 0.00000 0.00000\n        key 3.20000 0.00000 0.00000 0.00000\n        key 3.24000 0.00000 0.00000 0.00000\n        key 3.28000 0.00000 0.00000 0.00000\n        key 3.32000 0.00000 0.00000 0.00000\n        key 3.36000 0.00000 0.00000 0.00000\n        key 3.40000 0.00000 0.00000 0.00000\n        key 3.44000 0.00000 0.00000 0.00000\n        key 3.48000 0.00000 0.00000 0.00000\n        key 3.52000 0.00000 0.00000 0.00000\n        key 3.56000 0.00000 0.00000 0.00000\n        key 3.60000 0.00000 0.00000 0.00000\n        key 3.64000 0.00000 0.00000 0.00000\n        key 3.68000 0.00000 0.00000 0.00000\n        key 3.72000 0.00000 0.00000 0.00000\n        key 3.76000 0.00000 0.00000 0.00000\n        key 3.80000 0.00000 0.00000 0.00000\n        key 3.84000 0.00000 0.00000 0.00000\n        key 3.88000 0.00000 0.00000 0.00000\n        key 3.92000 0.00000 0.00000 0.00000\n        key 3.96000 0.00000 0.00000 0.00000\n      }\n    }\n    Channel {\n      name "quaternion"\n      target "Bone.002"\n      Keyframes "Quat" 100 {\n        key 0.00000 0.00000 0.00000 0.00000 1.00000\n        key 0.04000 -0.00000 0.00000 -0.00000 1.00000\n        key 0.08000 0.00000 0.00000 -0.00000 1.00000\n        key 0.12000 0.00000 0.00000 -0.00000 1.00000\n        key 0.16000 0.00000 0.00000 -0.00000 1.00000\n        key 0.20000 0.00000 0.00000 0.00000 1.00000\n        key 0.24000 -0.00000 -0.00000 -0.00000 1.00000\n        key 0.28000 -0.00000 -0.00000 -0.00000 1.00000\n        key 0.32000 0.00000 0.00000 0.00000 1.00000\n        key 0.36000 0.00000 0.00000 -0.00000 1.00000\n        key 0.40000 0.00000 -0.00000 0.00000 1.00000\n        key 0.44000 0.00000 0.00000 0.00000 1.00000\n        key 0.48000 0.00000 0.00000 -0.00000 1.00000\n        key 0.52000 0.00000 -0.00000 -0.00000 1.00000\n        key 0.56000 0.00000 0.00000 -0.00000 1.00000\n        key 0.60000 0.00000 0.00000 -0.00000 1.00000\n        key 0.64000 0.00000 0.00000 -0.00000 1.00000\n        key 0.68000 0.00000 0.00000 -0.00000 1.00000\n        key 0.72000 0.00000 0.00000 -0.00000 1.00000\n        key 0.76000 0.00000 -0.00000 0.00000 1.00000\n        key 0.80000 0.00000 -0.00000 -0.00000 1.00000\n        key 0.84000 0.00000 -0.00000 -0.00000 1.00000\n        key 0.88000 0.00000 0.00000 0.00000 1.00000\n        key 0.92000 0.00000 0.00000 -0.00000 1.00000\n        key 0.96000 0.00000 0.00000 -0.00000 1.00000\n        key 1.00000 0.00000 0.00000 -0.00000 1.00000\n        key 1.04000 0.00000 0.00000 0.00000 1.00000\n        key 1.08000 0.00000 -0.00000 0.00000 1.00000\n        key 1.12000 0.00000 -0.00000 0.00000 1.00000\n        key 1.16000 0.00000 0.00000 -0.00000 1.00000\n        key 1.20000 -0.00000 -0.00000 -0.00000 1.00000\n        key 1.24000 0.00000 0.00000 -0.00000 1.00000\n        key 1.28000 0.00000 -0.00000 0.00000 1.00000\n        key 1.32000 0.00000 0.00000 -0.00000 1.00000\n        key 1.36000 0.00000 0.00000 -0.00000 1.00000\n        key 1.40000 0.00000 -0.00000 -0.00000 1.00000\n        key 1.44000 0.00000 -0.00000 -0.00000 1.00000\n        key 1.48000 0.00000 0.00000 0.00000 1.00000\n        key 1.52000 -0.00000 -0.00000 -0.00000 1.00000\n        key 1.56000 0.00000 0.00000 0.00000 1.00000\n        key 1.60000 -0.00000 -0.00000 -0.00000 1.00000\n        key 1.64000 0.00000 0.00000 -0.00000 1.00000\n        key 1.68000 0.00000 -0.00000 0.00000 1.00000\n        key 1.72000 -0.00000 0.00000 0.00000 1.00000\n        key 1.76000 0.00000 -0.00000 0.00000 1.00000\n        key 1.80000 -0.00000 0.00000 -0.00000 1.00000\n        key 1.84000 0.00000 0.00000 0.00000 1.00000\n        key 1.88000 0.00000 0.00000 0.00000 1.00000\n        key 1.92000 0.00000 0.00000 0.00000 1.00000\n        key 1.96000 0.00000 0.00000 0.00000 1.00000\n        key 2.00000 0.00032 0.00000 -0.00000 1.00000\n        key 2.04000 0.00183 0.00000 0.00000 1.00000\n        key 2.08000 0.00461 0.00000 0.00000 0.99999\n        key 2.12000 0.00867 0.00000 -0.00000 0.99996\n        key 2.16000 0.01402 0.00000 -0.00000 0.99990\n        key 2.20000 0.02069 0.00000 0.00000 0.99979\n        key 2.24000 0.02868 0.00000 0.00000 0.99959\n        key 2.28000 0.03802 0.00000 0.00000 0.99928\n        key 2.32000 0.04870 0.00000 0.00000 0.99881\n        key 2.36000 0.06075 0.00000 -0.00000 0.99815\n        key 2.40000 0.07416 0.00000 -0.00000 0.99725\n        key 2.44000 0.08891 0.00000 -0.00000 0.99604\n        key 2.48000 0.10500 0.00000 0.00000 0.99447\n        key 2.52000 0.12240 0.00000 -0.00000 0.99248\n        key 2.56000 0.14105 0.00000 -0.00000 0.99000\n        key 2.60000 0.16091 0.00000 -0.00000 0.98697\n        key 2.64000 0.18189 0.00000 0.00000 0.98332\n        key 2.68000 0.20391 0.00000 -0.00000 0.97899\n        key 2.72000 0.22686 0.00000 -0.00000 0.97393\n        key 2.76000 0.25060 0.00000 0.00000 0.96809\n        key 2.80000 0.27498 0.00000 -0.00000 0.96145\n        key 2.84000 0.29985 0.00000 -0.00000 0.95399\n        key 2.88000 0.32504 0.00000 -0.00000 0.94570\n        key 2.92000 0.35036 0.00000 -0.00000 0.93661\n        key 2.96000 0.37564 0.00000 0.00000 0.92677\n        key 3.00000 0.40068 0.00000 0.00000 0.91622\n        key 3.04000 0.42531 0.00000 0.00000 0.90505\n        key 3.08000 0.44937 0.00000 -0.00000 0.89335\n        key 3.12000 0.47270 0.00000 0.00000 0.88122\n        key 3.16000 0.49518 0.00000 0.00000 0.86879\n        key 3.20000 0.51667 0.00000 -0.00000 0.85618\n        key 3.24000 0.53711 0.00000 0.00000 0.84351\n        key 3.28000 0.55640 0.00000 -0.00000 0.83091\n        key 3.32000 0.57451 0.00000 -0.00000 0.81850\n        key 3.36000 0.59139 0.00000 0.00000 0.80639\n        key 3.40000 0.60703 0.00000 -0.00000 0.79468\n        key 3.44000 0.62143 0.00000 0.00000 0.78347\n        key 3.48000 0.63459 0.00000 -0.00000 0.77285\n        key 3.52000 0.64655 0.00000 -0.00000 0.76287\n        key 3.56000 0.65732 0.00000 -0.00000 0.75361\n        key 3.60000 0.66694 0.00000 -0.00000 0.74511\n        key 3.64000 0.67543 0.00000 -0.00000 0.73742\n        key 3.68000 0.68285 0.00000 -0.00000 0.73056\n        key 3.72000 0.68921 0.00000 -0.00000 0.72456\n        key 3.76000 0.69456 0.00000 -0.00000 0.71943\n        key 3.80000 0.69893 0.00000 -0.00000 0.71519\n        key 3.84000 0.70234 0.00000 0.00000 0.71184\n        key 3.88000 0.70482 0.00000 0.00000 0.70939\n        key 3.92000 0.70639 0.00000 0.00000 0.70782\n        key 3.96000 0.70707 0.00000 0.00000 0.70714\n      }\n    }\n    Channel {\n      name "scale"\n      target "Bone.002"\n      Keyframes "Vec3" 100 {\n        key 0.00000 1.00000 1.00000 1.00000\n        key 0.04000 1.00000 1.00000 1.00000\n        key 0.08000 1.00000 1.00000 1.00000\n        key 0.12000 1.00000 1.00000 1.00000\n        key 0.16000 1.00000 1.00000 1.00000\n        key 0.20000 1.00000 1.00000 1.00000\n        key 0.24000 1.00000 1.00000 1.00000\n        key 0.28000 1.00000 1.00000 1.00000\n        key 0.32000 1.00000 1.00000 1.00000\n        key 0.36000 1.00000 1.00000 1.00000\n        key 0.40000 1.00000 1.00000 1.00000\n        key 0.44000 1.00000 1.00000 1.00000\n        key 0.48000 1.00000 1.00000 1.00000\n        key 0.52000 1.00000 1.00000 1.00000\n        key 0.56000 1.00000 1.00000 1.00000\n        key 0.60000 1.00000 1.00000 1.00000\n        key 0.64000 1.00000 1.00000 1.00000\n        key 0.68000 1.00000 1.00000 1.00000\n        key 0.72000 1.00000 1.00000 1.00000\n        key 0.76000 1.00000 1.00000 1.00000\n        key 0.80000 1.00000 1.00000 1.00000\n        key 0.84000 1.00000 1.00000 1.00000\n        key 0.88000 1.00000 1.00000 1.00000\n        key 0.92000 1.00000 1.00000 1.00000\n        key 0.96000 1.00000 1.00000 1.00000\n        key 1.00000 1.00000 1.00000 1.00000\n        key 1.04000 1.00000 1.00000 1.00000\n        key 1.08000 1.00000 1.00000 1.00000\n        key 1.12000 1.00000 1.00000 1.00000\n        key 1.16000 1.00000 1.00000 1.00000\n        key 1.20000 1.00000 1.00000 1.00000\n        key 1.24000 1.00000 1.00000 1.00000\n        key 1.28000 1.00000 1.00000 1.00000\n        key 1.32000 1.00000 1.00000 1.00000\n        key 1.36000 1.00000 1.00000 1.00000\n        key 1.40000 1.00000 1.00000 1.00000\n        key 1.44000 1.00000 1.00000 1.00000\n        key 1.48000 1.00000 1.00000 1.00000\n        key 1.52000 1.00000 1.00000 1.00000\n        key 1.56000 1.00000 1.00000 1.00000\n        key 1.60000 1.00000 1.00000 1.00000\n        key 1.64000 1.00000 1.00000 1.00000\n        key 1.68000 1.00000 1.00000 1.00000\n        key 1.72000 1.00000 1.00000 1.00000\n        key 1.76000 1.00000 1.00000 1.00000\n        key 1.80000 1.00000 1.00000 1.00000\n        key 1.84000 1.00000 1.00000 1.00000\n        key 1.88000 1.00000 1.00000 1.00000\n        key 1.92000 1.00000 1.00000 1.00000\n        key 1.96000 1.00000 1.00000 1.00000\n        key 2.00000 1.00000 1.00000 1.00000\n        key 2.04000 1.00000 1.00000 1.00000\n        key 2.08000 1.00000 1.00000 1.00000\n        key 2.12000 1.00000 1.00000 1.00000\n        key 2.16000 1.00000 1.00000 1.00000\n        key 2.20000 1.00000 1.00000 1.00000\n        key 2.24000 1.00000 1.00000 1.00000\n        key 2.28000 1.00000 1.00000 1.00000\n        key 2.32000 1.00000 1.00000 1.00000\n        key 2.36000 1.00000 1.00000 1.00000\n        key 2.40000 1.00000 1.00000 1.00000\n        key 2.44000 1.00000 1.00000 1.00000\n        key 2.48000 1.00000 1.00000 1.00000\n        key 2.52000 1.00000 1.00000 1.00000\n        key 2.56000 1.00000 1.00000 1.00000\n        key 2.60000 1.00000 1.00000 1.00000\n        key 2.64000 1.00000 1.00000 1.00000\n        key 2.68000 1.00000 1.00000 1.00000\n        key 2.72000 1.00000 1.00000 1.00000\n        key 2.76000 1.00000 1.00000 1.00000\n        key 2.80000 1.00000 1.00000 1.00000\n        key 2.84000 1.00000 1.00000 1.00000\n        key 2.88000 1.00000 1.00000 1.00000\n        key 2.92000 1.00000 1.00000 1.00000\n        key 2.96000 1.00000 1.00000 1.00000\n        key 3.00000 1.00000 1.00000 1.00000\n        key 3.04000 1.00000 1.00000 1.00000\n        key 3.08000 1.00000 1.00000 1.00000\n        key 3.12000 1.00000 1.00000 1.00000\n        key 3.16000 1.00000 1.00000 1.00000\n        key 3.20000 1.00000 1.00000 1.00000\n        key 3.24000 1.00000 1.00000 1.00000\n        key 3.28000 1.00000 1.00000 1.00000\n        key 3.32000 1.00000 1.00000 1.00000\n        key 3.36000 1.00000 1.00000 1.00000\n        key 3.40000 1.00000 1.00000 1.00000\n        key 3.44000 1.00000 1.00000 1.00000\n        key 3.48000 1.00000 1.00000 1.00000\n        key 3.52000 1.00000 1.00000 1.00000\n        key 3.56000 1.00000 1.00000 1.00000\n        key 3.60000 1.00000 1.00000 1.00000\n        key 3.64000 1.00000 1.00000 1.00000\n        key 3.68000 1.00000 1.00000 1.00000\n        key 3.72000 1.00000 1.00000 1.00000\n        key 3.76000 1.00000 1.00000 1.00000\n        key 3.80000 1.00000 1.00000 1.00000\n        key 3.84000 1.00000 1.00000 1.00000\n        key 3.88000 1.00000 1.00000 1.00000\n        key 3.92000 1.00000 1.00000 1.00000\n        key 3.96000 1.00000 1.00000 1.00000\n      }\n    }\n    Channel {\n      name "position"\n      target "Bone.002"\n      Keyframes "Vec3" 100 {\n        key 0.00000 0.00000 0.00000 -0.00000\n        key 0.04000 0.00000 0.00000 -0.00000\n        key 0.08000 0.00000 0.00000 -0.00000\n        key 0.12000 0.00000 0.00000 0.00000\n        key 0.16000 0.00000 0.00000 0.00000\n        key 0.20000 -0.00000 0.00000 -0.00000\n        key 0.24000 0.00000 0.00000 -0.00000\n        key 0.28000 0.00000 0.00000 -0.00000\n        key 0.32000 0.00000 0.00000 -0.00000\n        key 0.36000 0.00000 0.00000 0.00000\n        key 0.40000 -0.00000 -0.00000 0.00000\n        key 0.44000 -0.00000 0.00000 -0.00000\n        key 0.48000 0.00000 0.00000 0.00000\n        key 0.52000 -0.00000 0.00000 0.00000\n        key 0.56000 0.00000 0.00000 0.00000\n        key 0.60000 0.00000 0.00000 -0.00000\n        key 0.64000 -0.00000 0.00000 0.00000\n        key 0.68000 -0.00000 0.00000 0.00000\n        key 0.72000 -0.00000 0.00000 0.00000\n        key 0.76000 0.00000 -0.00000 0.00000\n        key 0.80000 -0.00000 0.00000 0.00000\n        key 0.84000 -0.00000 0.00000 0.00000\n        key 0.88000 0.00000 0.00000 -0.00000\n        key 0.92000 0.00000 0.00000 0.00000\n        key 0.96000 0.00000 0.00000 -0.00000\n        key 1.00000 0.00000 0.00000 -0.00000\n        key 1.04000 -0.00000 0.00000 0.00000\n        key 1.08000 -0.00000 0.00000 0.00000\n        key 1.12000 -0.00000 -0.00000 0.00000\n        key 1.16000 -0.00000 0.00000 0.00000\n        key 1.20000 0.00000 0.00000 0.00000\n        key 1.24000 -0.00000 -0.00000 0.00000\n        key 1.28000 0.00000 0.00000 -0.00000\n        key 1.32000 0.00000 0.00000 -0.00000\n        key 1.36000 -0.00000 0.00000 0.00000\n        key 1.40000 -0.00000 0.00000 0.00000\n        key 1.44000 0.00000 0.00000 -0.00000\n        key 1.48000 -0.00000 0.00000 0.00000\n        key 1.52000 -0.00000 -0.00000 0.00000\n        key 1.56000 -0.00000 0.00000 0.00000\n        key 1.60000 0.00000 0.00000 -0.00000\n        key 1.64000 -0.00000 0.00000 0.00000\n        key 1.68000 0.00000 -0.00000 -0.00000\n        key 1.72000 -0.00000 0.00000 0.00000\n        key 1.76000 0.00000 0.00000 -0.00000\n        key 1.80000 -0.00000 0.00000 0.00000\n        key 1.84000 0.00000 0.00000 -0.00000\n        key 1.88000 -0.00000 0.00000 0.00000\n        key 1.92000 -0.00000 0.00000 0.00000\n        key 1.96000 0.00000 0.00000 -0.00000\n        key 2.00000 0.00000 0.00000 -0.00000\n        key 2.04000 0.00000 0.00000 -0.00000\n        key 2.08000 0.00000 0.00000 -0.00000\n        key 2.12000 0.00000 0.00000 -0.00000\n        key 2.16000 0.00000 0.00000 -0.00000\n        key 2.20000 0.00000 0.00000 -0.00000\n        key 2.24000 0.00000 0.00000 -0.00000\n        key 2.28000 0.00000 0.00000 -0.00000\n        key 2.32000 0.00000 0.00000 -0.00000\n        key 2.36000 0.00000 0.00000 -0.00000\n        key 2.40000 0.00000 0.00000 -0.00000\n        key 2.44000 0.00000 0.00000 -0.00000\n        key 2.48000 0.00000 0.00000 -0.00000\n        key 2.52000 0.00000 0.00000 -0.00000\n        key 2.56000 0.00000 0.00000 -0.00000\n        key 2.60000 0.00000 0.00000 -0.00000\n        key 2.64000 0.00000 0.00000 -0.00000\n        key 2.68000 0.00000 0.00000 -0.00000\n        key 2.72000 0.00000 0.00000 -0.00000\n        key 2.76000 0.00000 0.00000 -0.00000\n        key 2.80000 0.00000 0.00000 -0.00000\n        key 2.84000 0.00000 0.00000 -0.00000\n        key 2.88000 0.00000 0.00000 -0.00000\n        key 2.92000 0.00000 0.00000 -0.00000\n        key 2.96000 0.00000 0.00000 -0.00000\n        key 3.00000 0.00000 0.00000 -0.00000\n        key 3.04000 0.00000 0.00000 -0.00000\n        key 3.08000 0.00000 0.00000 -0.00000\n        key 3.12000 0.00000 0.00000 -0.00000\n        key 3.16000 0.00000 0.00000 -0.00000\n        key 3.20000 0.00000 0.00000 -0.00000\n        key 3.24000 0.00000 0.00000 -0.00000\n        key 3.28000 0.00000 0.00000 -0.00000\n        key 3.32000 0.00000 0.00000 -0.00000\n        key 3.36000 0.00000 0.00000 -0.00000\n        key 3.40000 0.00000 0.00000 -0.00000\n        key 3.44000 0.00000 0.00000 -0.00000\n        key 3.48000 0.00000 0.00000 -0.00000\n        key 3.52000 0.00000 0.00000 -0.00000\n        key 3.56000 0.00000 0.00000 -0.00000\n        key 3.60000 0.00000 0.00000 -0.00000\n        key 3.64000 0.00000 0.00000 -0.00000\n        key 3.68000 0.00000 0.00000 -0.00000\n        key 3.72000 0.00000 0.00000 -0.00000\n        key 3.76000 0.00000 0.00000 -0.00000\n        key 3.80000 0.00000 0.00000 -0.00000\n        key 3.84000 0.00000 0.00000 -0.00000\n        key 3.88000 0.00000 0.00000 -0.00000\n        key 3.92000 0.00000 0.00000 -0.00000\n        key 3.96000 0.00000 0.00000 -0.00000\n      }\n    }\n    Channel {\n      name "quaternion"\n      target "Bone"\n      Keyframes "Quat" 100 {\n        key 0.00000 0.00000 0.00000 0.00000 1.00000\n        key 0.04000 0.00000 0.00000 0.00000 1.00000\n        key 0.08000 0.00000 0.00000 0.00000 1.00000\n        key 0.12000 0.00000 0.00000 0.00000 1.00000\n        key 0.16000 0.00000 0.00000 0.00000 1.00000\n        key 0.20000 0.00000 0.00000 0.00000 1.00000\n        key 0.24000 0.00000 0.00000 0.00000 1.00000\n        key 0.28000 0.00000 0.00000 0.00000 1.00000\n        key 0.32000 0.00000 0.00000 0.00000 1.00000\n        key 0.36000 0.00000 0.00000 0.00000 1.00000\n        key 0.40000 0.00000 0.00000 0.00000 1.00000\n        key 0.44000 0.00000 0.00000 0.00000 1.00000\n        key 0.48000 0.00000 0.00000 0.00000 1.00000\n        key 0.52000 0.00000 0.00000 0.00000 1.00000\n        key 0.56000 0.00000 0.00000 0.00000 1.00000\n        key 0.60000 0.00000 0.00000 0.00000 1.00000\n        key 0.64000 0.00000 0.00000 0.00000 1.00000\n        key 0.68000 0.00000 0.00000 0.00000 1.00000\n        key 0.72000 0.00000 0.00000 0.00000 1.00000\n        key 0.76000 0.00000 0.00000 0.00000 1.00000\n        key 0.80000 0.00000 0.00000 0.00000 1.00000\n        key 0.84000 0.00000 0.00000 0.00000 1.00000\n        key 0.88000 0.00000 0.00000 0.00000 1.00000\n        key 0.92000 0.00000 0.00000 0.00000 1.00000\n        key 0.96000 0.00000 0.00000 0.00000 1.00000\n        key 1.00000 0.00000 0.00000 0.00000 1.00000\n        key 1.04000 0.00000 0.00000 0.00000 1.00000\n        key 1.08000 0.00000 0.00000 0.00000 1.00000\n        key 1.12000 0.00000 0.00000 0.00000 1.00000\n        key 1.16000 0.00000 0.00000 0.00000 1.00000\n        key 1.20000 0.00000 0.00000 0.00000 1.00000\n        key 1.24000 0.00000 0.00000 0.00000 1.00000\n        key 1.28000 0.00000 0.00000 0.00000 1.00000\n        key 1.32000 0.00000 0.00000 0.00000 1.00000\n        key 1.36000 0.00000 0.00000 0.00000 1.00000\n        key 1.40000 0.00000 0.00000 0.00000 1.00000\n        key 1.44000 0.00000 0.00000 0.00000 1.00000\n        key 1.48000 0.00000 0.00000 0.00000 1.00000\n        key 1.52000 0.00000 0.00000 0.00000 1.00000\n        key 1.56000 0.00000 0.00000 0.00000 1.00000\n        key 1.60000 0.00000 0.00000 0.00000 1.00000\n        key 1.64000 0.00000 0.00000 0.00000 1.00000\n        key 1.68000 0.00000 0.00000 0.00000 1.00000\n        key 1.72000 0.00000 0.00000 0.00000 1.00000\n        key 1.76000 0.00000 0.00000 0.00000 1.00000\n        key 1.80000 0.00000 0.00000 0.00000 1.00000\n        key 1.84000 0.00000 0.00000 0.00000 1.00000\n        key 1.88000 0.00000 0.00000 0.00000 1.00000\n        key 1.92000 0.00000 0.00000 0.00000 1.00000\n        key 1.96000 0.00000 0.00000 0.00000 1.00000\n        key 2.00000 0.00000 0.00000 0.00000 1.00000\n        key 2.04000 0.00000 0.00000 0.00000 1.00000\n        key 2.08000 0.00000 0.00000 0.00000 1.00000\n        key 2.12000 0.00000 0.00000 0.00000 1.00000\n        key 2.16000 0.00000 0.00000 0.00000 1.00000\n        key 2.20000 0.00000 0.00000 0.00000 1.00000\n        key 2.24000 0.00000 0.00000 0.00000 1.00000\n        key 2.28000 0.00000 0.00000 0.00000 1.00000\n        key 2.32000 0.00000 0.00000 0.00000 1.00000\n        key 2.36000 0.00000 0.00000 0.00000 1.00000\n        key 2.40000 0.00000 0.00000 0.00000 1.00000\n        key 2.44000 0.00000 0.00000 0.00000 1.00000\n        key 2.48000 0.00000 0.00000 0.00000 1.00000\n        key 2.52000 0.00000 0.00000 0.00000 1.00000\n        key 2.56000 0.00000 0.00000 0.00000 1.00000\n        key 2.60000 0.00000 0.00000 0.00000 1.00000\n        key 2.64000 0.00000 0.00000 0.00000 1.00000\n        key 2.68000 0.00000 0.00000 0.00000 1.00000\n        key 2.72000 0.00000 0.00000 0.00000 1.00000\n        key 2.76000 0.00000 0.00000 0.00000 1.00000\n        key 2.80000 0.00000 0.00000 0.00000 1.00000\n        key 2.84000 0.00000 0.00000 0.00000 1.00000\n        key 2.88000 0.00000 0.00000 0.00000 1.00000\n        key 2.92000 0.00000 0.00000 0.00000 1.00000\n        key 2.96000 0.00000 0.00000 0.00000 1.00000\n        key 3.00000 0.00000 0.00000 0.00000 1.00000\n        key 3.04000 0.00000 0.00000 0.00000 1.00000\n        key 3.08000 0.00000 0.00000 0.00000 1.00000\n        key 3.12000 0.00000 0.00000 0.00000 1.00000\n        key 3.16000 0.00000 0.00000 0.00000 1.00000\n        key 3.20000 0.00000 0.00000 0.00000 1.00000\n        key 3.24000 0.00000 0.00000 0.00000 1.00000\n        key 3.28000 0.00000 0.00000 0.00000 1.00000\n        key 3.32000 0.00000 0.00000 0.00000 1.00000\n        key 3.36000 0.00000 0.00000 0.00000 1.00000\n        key 3.40000 0.00000 0.00000 0.00000 1.00000\n        key 3.44000 0.00000 0.00000 0.00000 1.00000\n        key 3.48000 0.00000 0.00000 0.00000 1.00000\n        key 3.52000 0.00000 0.00000 0.00000 1.00000\n        key 3.56000 0.00000 0.00000 0.00000 1.00000\n        key 3.60000 0.00000 0.00000 0.00000 1.00000\n        key 3.64000 0.00000 0.00000 0.00000 1.00000\n        key 3.68000 0.00000 0.00000 0.00000 1.00000\n        key 3.72000 0.00000 0.00000 0.00000 1.00000\n        key 3.76000 0.00000 0.00000 0.00000 1.00000\n        key 3.80000 0.00000 0.00000 0.00000 1.00000\n        key 3.84000 0.00000 0.00000 0.00000 1.00000\n        key 3.88000 0.00000 0.00000 0.00000 1.00000\n        key 3.92000 0.00000 0.00000 0.00000 1.00000\n        key 3.96000 0.00000 0.00000 0.00000 1.00000\n      }\n    }\n    Channel {\n      name "scale"\n      target "Bone"\n      Keyframes "Vec3" 100 {\n        key 0.00000 1.00000 1.00000 1.00000\n        key 0.04000 1.00000 1.00000 1.00000\n        key 0.08000 1.00000 1.00000 1.00000\n        key 0.12000 1.00000 1.00000 1.00000\n        key 0.16000 1.00000 1.00000 1.00000\n        key 0.20000 1.00000 1.00000 1.00000\n        key 0.24000 1.00000 1.00000 1.00000\n        key 0.28000 1.00000 1.00000 1.00000\n        key 0.32000 1.00000 1.00000 1.00000\n        key 0.36000 1.00000 1.00000 1.00000\n        key 0.40000 1.00000 1.00000 1.00000\n        key 0.44000 1.00000 1.00000 1.00000\n        key 0.48000 1.00000 1.00000 1.00000\n        key 0.52000 1.00000 1.00000 1.00000\n        key 0.56000 1.00000 1.00000 1.00000\n        key 0.60000 1.00000 1.00000 1.00000\n        key 0.64000 1.00000 1.00000 1.00000\n        key 0.68000 1.00000 1.00000 1.00000\n        key 0.72000 1.00000 1.00000 1.00000\n        key 0.76000 1.00000 1.00000 1.00000\n        key 0.80000 1.00000 1.00000 1.00000\n        key 0.84000 1.00000 1.00000 1.00000\n        key 0.88000 1.00000 1.00000 1.00000\n        key 0.92000 1.00000 1.00000 1.00000\n        key 0.96000 1.00000 1.00000 1.00000\n        key 1.00000 1.00000 1.00000 1.00000\n        key 1.04000 1.00000 1.00000 1.00000\n        key 1.08000 1.00000 1.00000 1.00000\n        key 1.12000 1.00000 1.00000 1.00000\n        key 1.16000 1.00000 1.00000 1.00000\n        key 1.20000 1.00000 1.00000 1.00000\n        key 1.24000 1.00000 1.00000 1.00000\n        key 1.28000 1.00000 1.00000 1.00000\n        key 1.32000 1.00000 1.00000 1.00000\n        key 1.36000 1.00000 1.00000 1.00000\n        key 1.40000 1.00000 1.00000 1.00000\n        key 1.44000 1.00000 1.00000 1.00000\n        key 1.48000 1.00000 1.00000 1.00000\n        key 1.52000 1.00000 1.00000 1.00000\n        key 1.56000 1.00000 1.00000 1.00000\n        key 1.60000 1.00000 1.00000 1.00000\n        key 1.64000 1.00000 1.00000 1.00000\n        key 1.68000 1.00000 1.00000 1.00000\n        key 1.72000 1.00000 1.00000 1.00000\n        key 1.76000 1.00000 1.00000 1.00000\n        key 1.80000 1.00000 1.00000 1.00000\n        key 1.84000 1.00000 1.00000 1.00000\n        key 1.88000 1.00000 1.00000 1.00000\n        key 1.92000 1.00000 1.00000 1.00000\n        key 1.96000 1.00000 1.00000 1.00000\n        key 2.00000 1.00000 1.00000 1.00000\n        key 2.04000 1.00000 1.00000 1.00000\n        key 2.08000 1.00000 1.00000 1.00000\n        key 2.12000 1.00000 1.00000 1.00000\n        key 2.16000 1.00000 1.00000 1.00000\n        key 2.20000 1.00000 1.00000 1.00000\n        key 2.24000 1.00000 1.00000 1.00000\n        key 2.28000 1.00000 1.00000 1.00000\n        key 2.32000 1.00000 1.00000 1.00000\n        key 2.36000 1.00000 1.00000 1.00000\n        key 2.40000 1.00000 1.00000 1.00000\n        key 2.44000 1.00000 1.00000 1.00000\n        key 2.48000 1.00000 1.00000 1.00000\n        key 2.52000 1.00000 1.00000 1.00000\n        key 2.56000 1.00000 1.00000 1.00000\n        key 2.60000 1.00000 1.00000 1.00000\n        key 2.64000 1.00000 1.00000 1.00000\n        key 2.68000 1.00000 1.00000 1.00000\n        key 2.72000 1.00000 1.00000 1.00000\n        key 2.76000 1.00000 1.00000 1.00000\n        key 2.80000 1.00000 1.00000 1.00000\n        key 2.84000 1.00000 1.00000 1.00000\n        key 2.88000 1.00000 1.00000 1.00000\n        key 2.92000 1.00000 1.00000 1.00000\n        key 2.96000 1.00000 1.00000 1.00000\n        key 3.00000 1.00000 1.00000 1.00000\n        key 3.04000 1.00000 1.00000 1.00000\n        key 3.08000 1.00000 1.00000 1.00000\n        key 3.12000 1.00000 1.00000 1.00000\n        key 3.16000 1.00000 1.00000 1.00000\n        key 3.20000 1.00000 1.00000 1.00000\n        key 3.24000 1.00000 1.00000 1.00000\n        key 3.28000 1.00000 1.00000 1.00000\n        key 3.32000 1.00000 1.00000 1.00000\n        key 3.36000 1.00000 1.00000 1.00000\n        key 3.40000 1.00000 1.00000 1.00000\n        key 3.44000 1.00000 1.00000 1.00000\n        key 3.48000 1.00000 1.00000 1.00000\n        key 3.52000 1.00000 1.00000 1.00000\n        key 3.56000 1.00000 1.00000 1.00000\n        key 3.60000 1.00000 1.00000 1.00000\n        key 3.64000 1.00000 1.00000 1.00000\n        key 3.68000 1.00000 1.00000 1.00000\n        key 3.72000 1.00000 1.00000 1.00000\n        key 3.76000 1.00000 1.00000 1.00000\n        key 3.80000 1.00000 1.00000 1.00000\n        key 3.84000 1.00000 1.00000 1.00000\n        key 3.88000 1.00000 1.00000 1.00000\n        key 3.92000 1.00000 1.00000 1.00000\n        key 3.96000 1.00000 1.00000 1.00000\n      }\n    }\n    Channel {\n      name "position"\n      target "Bone"\n      Keyframes "Vec3" 100 {\n        key 0.00000 -0.00000 0.00000 0.00000\n        key 0.04000 -0.00000 0.00000 0.00000\n        key 0.08000 -0.00000 0.00000 0.00000\n        key 0.12000 -0.00000 0.00000 0.00000\n        key 0.16000 -0.00000 0.00000 0.00000\n        key 0.20000 -0.00000 0.00000 0.00000\n        key 0.24000 -0.00000 0.00000 0.00000\n        key 0.28000 -0.00000 0.00000 0.00000\n        key 0.32000 -0.00000 0.00000 0.00000\n        key 0.36000 -0.00000 0.00000 0.00000\n        key 0.40000 -0.00000 0.00000 0.00000\n        key 0.44000 -0.00000 0.00000 0.00000\n        key 0.48000 -0.00000 0.00000 0.00000\n        key 0.52000 -0.00000 0.00000 0.00000\n        key 0.56000 -0.00000 0.00000 0.00000\n        key 0.60000 -0.00000 0.00000 0.00000\n        key 0.64000 -0.00000 0.00000 0.00000\n        key 0.68000 -0.00000 0.00000 0.00000\n        key 0.72000 -0.00000 0.00000 0.00000\n        key 0.76000 -0.00000 0.00000 0.00000\n        key 0.80000 -0.00000 0.00000 0.00000\n        key 0.84000 -0.00000 0.00000 0.00000\n        key 0.88000 -0.00000 0.00000 0.00000\n        key 0.92000 -0.00000 0.00000 0.00000\n        key 0.96000 -0.00000 0.00000 0.00000\n        key 1.00000 -0.00000 0.00000 0.00000\n        key 1.04000 -0.00000 0.00000 0.00000\n        key 1.08000 -0.00000 0.00000 0.00000\n        key 1.12000 -0.00000 0.00000 0.00000\n        key 1.16000 -0.00000 0.00000 0.00000\n        key 1.20000 -0.00000 0.00000 0.00000\n        key 1.24000 -0.00000 0.00000 0.00000\n        key 1.28000 -0.00000 0.00000 0.00000\n        key 1.32000 -0.00000 0.00000 0.00000\n        key 1.36000 -0.00000 0.00000 0.00000\n        key 1.40000 -0.00000 0.00000 0.00000\n        key 1.44000 -0.00000 0.00000 0.00000\n        key 1.48000 -0.00000 0.00000 0.00000\n        key 1.52000 -0.00000 0.00000 0.00000\n        key 1.56000 -0.00000 0.00000 0.00000\n        key 1.60000 -0.00000 0.00000 0.00000\n        key 1.64000 -0.00000 0.00000 0.00000\n        key 1.68000 -0.00000 0.00000 0.00000\n        key 1.72000 -0.00000 0.00000 0.00000\n        key 1.76000 -0.00000 0.00000 0.00000\n        key 1.80000 -0.00000 0.00000 0.00000\n        key 1.84000 -0.00000 0.00000 0.00000\n        key 1.88000 -0.00000 0.00000 0.00000\n        key 1.92000 -0.00000 0.00000 0.00000\n        key 1.96000 -0.00000 0.00000 0.00000\n        key 2.00000 -0.00000 0.00000 0.00000\n        key 2.04000 -0.00000 0.00000 0.00000\n        key 2.08000 -0.00000 0.00000 0.00000\n        key 2.12000 -0.00000 0.00000 0.00000\n        key 2.16000 -0.00000 0.00000 0.00000\n        key 2.20000 -0.00000 0.00000 0.00000\n        key 2.24000 -0.00000 0.00000 0.00000\n        key 2.28000 -0.00000 0.00000 0.00000\n        key 2.32000 -0.00000 0.00000 0.00000\n        key 2.36000 -0.00000 0.00000 0.00000\n        key 2.40000 -0.00000 0.00000 0.00000\n        key 2.44000 -0.00000 0.00000 0.00000\n        key 2.48000 -0.00000 0.00000 0.00000\n        key 2.52000 -0.00000 0.00000 0.00000\n        key 2.56000 -0.00000 0.00000 0.00000\n        key 2.60000 -0.00000 0.00000 0.00000\n        key 2.64000 -0.00000 0.00000 0.00000\n        key 2.68000 -0.00000 0.00000 0.00000\n        key 2.72000 -0.00000 0.00000 0.00000\n        key 2.76000 -0.00000 0.00000 0.00000\n        key 2.80000 -0.00000 0.00000 0.00000\n        key 2.84000 -0.00000 0.00000 0.00000\n        key 2.88000 -0.00000 0.00000 0.00000\n        key 2.92000 -0.00000 0.00000 0.00000\n        key 2.96000 -0.00000 0.00000 0.00000\n        key 3.00000 -0.00000 0.00000 0.00000\n        key 3.04000 -0.00000 0.00000 0.00000\n        key 3.08000 -0.00000 0.00000 0.00000\n        key 3.12000 -0.00000 0.00000 0.00000\n        key 3.16000 -0.00000 0.00000 0.00000\n        key 3.20000 -0.00000 0.00000 0.00000\n        key 3.24000 -0.00000 0.00000 0.00000\n        key 3.28000 -0.00000 0.00000 0.00000\n        key 3.32000 -0.00000 0.00000 0.00000\n        key 3.36000 -0.00000 0.00000 0.00000\n        key 3.40000 -0.00000 0.00000 0.00000\n        key 3.44000 -0.00000 0.00000 0.00000\n        key 3.48000 -0.00000 0.00000 0.00000\n        key 3.52000 -0.00000 0.00000 0.00000\n        key 3.56000 -0.00000 0.00000 0.00000\n        key 3.60000 -0.00000 0.00000 0.00000\n        key 3.64000 -0.00000 0.00000 0.00000\n        key 3.68000 -0.00000 0.00000 0.00000\n        key 3.72000 -0.00000 0.00000 0.00000\n        key 3.76000 -0.00000 0.00000 0.00000\n        key 3.80000 -0.00000 0.00000 0.00000\n        key 3.84000 -0.00000 0.00000 0.00000\n        key 3.88000 -0.00000 0.00000 0.00000\n        key 3.92000 -0.00000 0.00000 0.00000\n        key 3.96000 -0.00000 0.00000 0.00000\n      }\n    }\n  }\n$}\n'
        self.assertEquals(result, text)
        exporter.write()

    def testIpos(self):
        sc = bpy.data.scenes["Ipos"]
        bpy.data.scenes.active = sc
        exporter = Export()
        exporter.config.anim_bake = "force"
        exporter.config.filename = "ipos"
        exporter.process()
        self.assertEquals(5, len(exporter.animations))
        exporter.write()

    def testConfigNoAnimations(self):
        sc = bpy.data.scenes["Ipos"]
        bpy.data.scenes.active = sc
        exporter = Export()
        exporter.config.anim_bake = "force"
        exporter.config.export_anim = False
        exporter.config.filename = "ipos_noanimation"
        exporter.process()
        exporter.write()
        self.assertEquals(0, len(exporter.animations))

    def testPostProcessAnimations(self):
        sc = bpy.data.scenes["Armature"]
        bpy.data.scenes.active = sc
        exporter = Export()
        exporter.config.anim_bake = "force"
        exporter.config.export_anim = False
        exporter.config.filename = "action_postprocess"
        exporter.process()
        self.assertEquals(0, len(exporter.animations))
        exporter.createAnimationsFromList([bpy.data.actions['Idle_Main.001']])
        self.assertEquals(1, len(exporter.animations))
        exporter.postProcess()
        exporter.write()


    def testPostProcessAnimationsNathan(self):
        sc = bpy.data.scenes["Ipos"]
        bpy.data.scenes.active = sc
        exporter = Export()
        exporter.config.anim_bake = "force"
        exporter.config.export_anim = False
        exporter.config.filename = "ipos_postprocess"
        exporter.process()
        self.assertEquals(0, len(exporter.animations))
        exporter.createAnimationsFromList([bpy.data.ipos['monkey'],
                                           bpy.data.ipos['monkey.001'],
                                           bpy.data.ipos['monkey.002'],
                                           bpy.data.ipos['monkey.003'],
                                           bpy.data.ipos['monkey.004'] ])
        self.assertEquals(5, len(exporter.animations))
        exporter.postProcess()
        exporter.write()


    def testBlenderMaterial(self):
        geomquad = BlenderObjectToGeometry(object = bpy.data.objects["CubeMaterial"])
        geom = geomquad.convert()
        self.assertEquals((0.0,0.0,0.0,1.0),geom.stateset.attributes[0].emission)
        self.assertEquals(True, close((0.64,0.64,0.64,1.0),geom.stateset.attributes[0].diffuse, 0.01) )
        self.assertEquals(True, close((0.64,0.64,0.64,1.0),geom.stateset.attributes[0].diffuse, 0.01) )
        self.assertEquals(True, close((0.5,0.5,0.5,1.0),geom.stateset.attributes[0].specular, 0.01) )
        self.assertEquals(12.5 ,geom.stateset.attributes[0].shininess)

    def testExportBlenderMaterial(self):
        sc = bpy.data.scenes["Materials"]
        bpy.data.scenes.active = sc
        exporter = Export()
        exporter.config.anim_bake = ""
        exporter.config.export_anim = False
        exporter.config.filename = "materials"
        exporter.process()
        exporter.write()
        self.assertEquals(True, len(exporter.items) != 0)


def Run():
        loader = runner.TestLoader()
        loader.methodPrefix = "test"
        suite = loader.suiteFactory()
        suite.addTest(loader.loadClass(Exporter))
        return runner.TrialRunner(
                reporter.VerboseTextReporter,
                tracebackFormat='default',
                ).run(suite)

if __name__ == '__main__':
        if Run().wasSuccessful():
                sys.exit(0)
        else:
                sys.exit(1)
